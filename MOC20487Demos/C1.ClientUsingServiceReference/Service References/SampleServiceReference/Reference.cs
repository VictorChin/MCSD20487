//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace C1.ClientUsingServiceReference.SampleServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SampleServiceReference.ISampleService")]
    public interface ISampleService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/AddNumbers", ReplyAction="http://tempuri.org/ISampleService/AddNumbersResponse")]
        double AddNumbers(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/AddNumbers", ReplyAction="http://tempuri.org/ISampleService/AddNumbersResponse")]
        System.Threading.Tasks.Task<double> AddNumbersAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/Multiply", ReplyAction="http://tempuri.org/ISampleService/MultiplyResponse")]
        double Multiply(Firebrand.Numbers n);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/Multiply", ReplyAction="http://tempuri.org/ISampleService/MultiplyResponse")]
        System.Threading.Tasks.Task<double> MultiplyAsync(Firebrand.Numbers n);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/SayHello", ReplyAction="http://tempuri.org/ISampleService/SayHelloResponse")]
        string SayHello();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/ISampleService/SayHello", ReplyAction="http://tempuri.org/ISampleService/SayHelloResponse")]
        System.Threading.Tasks.Task<string> SayHelloAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISampleServiceChannel : C1.ClientUsingServiceReference.SampleServiceReference.ISampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SampleServiceClient : System.ServiceModel.ClientBase<C1.ClientUsingServiceReference.SampleServiceReference.ISampleService>, C1.ClientUsingServiceReference.SampleServiceReference.ISampleService {
        
        public SampleServiceClient() {
        }
        
        public SampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double AddNumbers(double a, double b) {
            return base.Channel.AddNumbers(a, b);
        }
        
        public System.Threading.Tasks.Task<double> AddNumbersAsync(double a, double b) {
            return base.Channel.AddNumbersAsync(a, b);
        }
        
        public double Multiply(Firebrand.Numbers n) {
            return base.Channel.Multiply(n);
        }
        
        public System.Threading.Tasks.Task<double> MultiplyAsync(Firebrand.Numbers n) {
            return base.Channel.MultiplyAsync(n);
        }
        
        public string SayHello() {
            return base.Channel.SayHello();
        }
        
        public System.Threading.Tasks.Task<string> SayHelloAsync() {
            return base.Channel.SayHelloAsync();
        }
    }
}
